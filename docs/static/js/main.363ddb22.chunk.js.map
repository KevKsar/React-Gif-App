{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","ReactGifsApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","image","ReactGifsApp","category","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GACvBR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAElDN,EAAc,KAId,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,oBACZC,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,+BCPlBI,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUT,GAF3C,+DAGFU,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACE,qBAAKc,UAAU,2CAAf,SACE,qBAAKC,IAAKf,EAAKgB,IAAKN,OCFbO,EAAU,SAAC,GAAoB,IAAlBzB,EAAiB,EAAjBA,WAAiB,ECDf,SAACA,GAAgB,IAAD,EACdR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACNvB,EAAQN,GAAY8B,MAAK,SAACX,GACtBY,YAAW,WACPH,EAAS,CACLf,KAAMM,EACNO,SAAS,MAEd,UAER,CAAC1B,IAEG2B,EDf2BK,CAAahC,GAAjCmB,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,uDAAd,SAAsEtB,IAErE0B,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,aEX/BiB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,YADhB,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,8BACKS,EAAWe,KAAI,SAACoB,GAAD,OACZ,cAAC,EAAD,CAAwBnC,WAAYmC,GAAtBA,Y,YCRlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.363ddb22.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmite = (e) => {\r\n        e.preventDefault();\r\n        inputValue.trim().length > 2 &&\r\n            setCategories((categories) => [inputValue, ...categories]);\r\n        //>> callback (categories) con el estado inicial y luego el nuevo\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmite}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                placeholder='Search a category'\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (categories) => {\r\n  \r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categories)}&limit=10&api_key=RNWxgLWv0MYB9ilI5exwhl52mghnd7bc`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url} ) => {\r\n\r\n  return (\r\n    <div className='card animate__animated animate__backInUp'>\r\n      <img src={url} alt={title}/>\r\n      {/* <p>{title}</p> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categories }) => {\r\n    const { data: images, loading } = useFetchGifs(categories);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" titleCategory animate__animated animate__fadeInLeft\">{categories}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            \r\n            <div className='card-grid'>\r\n                {images.map((image) => (\r\n                    <GifGridItem key={image.id} {...image} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n/*\r\nLa function map:\r\n  -utilisation de desctructuring >> de l'argument 'image' on prend id et title.\r\n  -dans le component GifGridItem on passe un objet avec spread de image, l'argument passé a la fonction dans map.\r\n*/\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categories) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categories).then((images) => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false,\r\n                });\r\n            }, 500);\r\n        });\r\n    }, [categories]);\r\n\r\n    return state;\r\n};\r\n\r\n/*\r\nLa function useEffect :\r\n  -permet d'executer du code de facon conditionel.\r\n  -son contenu n'est pas mit a jour a chaque rendus saufe en cas de dépendence passé une second argument.\r\n*/\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const ReactGifsApp = () => {\r\n    const [categories, setCategories] = useState(['welcome']);\r\n\r\n    return (\r\n        <>\r\n            <h1>React Gifs App</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <div>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} categories={category} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactGifsApp } from './ReactGifsApp';\nimport './index.css';\nimport '../node_modules/animate.css';\n\nReactDOM.render(\n    <ReactGifsApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}